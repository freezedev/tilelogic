/*! tilemap - v0.1.0 - 22-02-2014 */
!function(a){udefine.configure(function(b){udefine.inject.add(a,{root:b,name:"Tilemap"})})}("tilemap"),udefine("tilemap",function(){var a=function(){var a=function(a,b,c){"number"==typeof a&&(a={min:0,max:a}),"number"==typeof b&&(b={min:0,max:b}),null==a&&(a={min:0,max:4}),null==b&&(b={min:0,max:4}),this.tile=[],this.width=a,this.height=b,this.generateTiles(a,b);var d=this;null!=c&&this.each(function(a,b){d.tile[a][b]=c[a][b]})};return a.defaultType="empty",a.prototype.generateTiles=function(b,c){for(var d=b.min,e=b.max-1;e>d;d++)for(var f=c.min,g=c.max-1;g>f;f++)this.tile[d]=this.tile[d]||[],this.tile[d].push(a.defaultType)},a.prototype.each=function(a){this.map(a)},a.prototype.map=function(a){for(var b=[],c=this.tile,d=0,e=c.length;e>d;d++)!function(e){for(var f=0,g=e.length;g>f;f++)b.push(a(d,f,c[d][f]))}(c[d]);return b},a.prototype.flatten=function(){return this.map(function(a,b,c){return c})},a.prototype.flattenWithModifier=function(){return this.map(function(a,b,c){return{x:a,y:b,type:c}})},a.prototype.equals=function(b){var c=!0;if(!(b instanceof a))throw new Error("Argument is not a tile map");for(var d=this.tile,e=0,f=d.length;f>e;e++)!function(a){for(var f=0,g=a.length;g>f;f++)if(b.tile[e][f]!==d[e][f])return void(c=!1)}(d[e]);return c},a}();return a});