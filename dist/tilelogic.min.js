/*! tilelogic - v0.2.0 - 22-03-2015 */
(function(){var a=function(){var a=function(){var a=function(b,c,d){"number"==typeof b&&(b={min:0,max:b}),"number"==typeof c&&(c={min:0,max:c}),null==b&&(b={min:0,max:a.defaultWidth}),null==c&&(c={min:0,max:a.defaultHeight}),this.tile=[],this.width=b,this.height=c,this.generateTiles(b,c);var e=this;null!=d&&this.each(function(a,b){e.tile[a][b]="function"==typeof d?d(a,b):Array.isArray(d)?Array.isArray(d[a])?d[a][b]:d[a]:d})};return a.defaultType="empty",a.defaultHeight=4,a.defaultWidth=4,a.prototype.generateTiles=function(b,c){for(var d=b.min,e=b.max;e>d;d++)for(var f=c.min,g=c.max;g>f;f++)this.tile[d]=this.tile[d]||[],this.tile[d].push(a.defaultType)},a.prototype.each=a.prototype.forEach=function(a){this.map(a)},a.prototype.map=function(a){for(var b=[],c=this.tile,d=0,e=c.length;e>d;d++)!function(e){for(var f=0,g=e.length;g>f;f++)b.push(a(d,f,c[d][f]))}(c[d]);return b},a.prototype.flatten=function(){return this.map(function(a,b,c){return c})},a.prototype.flattenWithModifier=function(){return this.map(function(a,b,c){return{x:a,y:b,type:c}})},a.prototype.equals=function(a){var b=!0;if(!(a instanceof a))throw new Error("Argument is not a tile map");for(var c=this.tile,d=0,e=c.length;e>d;d++)!function(e){for(var f=0,g=e.length;g>f;f++)if(a.tile[d][f]!==c[d][f])return void(b=!1)}(c[d]);return b},a}();return a};"function"==typeof define&&define.amd?define([],a):"undefined"!=typeof exports&&null!==exports?module.exports=a():window.TileLogic=a()}).call(this);